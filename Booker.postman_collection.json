{
	"info": {
		"_postman_id": "06f92793-3c02-4181-a70a-28671d3b4893",
		"name": "Booker",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16934072",
		"_collection_link": "https://red-astronaut-228638.postman.co/workspace/CHECKOUT~312e33b4-22e7-46d7-b346-82111aa2f326/collection/16934072-06f92793-3c02-4181-a70a-28671d3b4893?action=share&source=collection_link&creator=16934072"
	},
	"item": [
		{
			"name": "GET Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = JSON.parse(responseBody);\r",
							"pm.globals.set(\"booker_token\", jsonData.token);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"We got token\", function () {\r",
							"  pm.expect(jsonData.token).to.have.length > 0;\r",
							"  pm.expect(jsonData.token).to.be.an(\"string\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/auth",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Booking Ids",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = JSON.parse(responseBody);\r",
							"let bookingsCount = jsonData.length;\r",
							"const random = Math.floor(Math.random()*bookingsCount);\r",
							"pm.globals.set(\"bookingid\", jsonData[random].bookingid);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Booking IDs array is not empty\", function () {\r",
							"  pm.expect(jsonData).to.have.length >= 0;\r",
							"});\r",
							"\r",
							"pm.test(\"Correct object is returned\", () => {\r",
							"  const expectedObject = {\r",
							"    \"bookingid\": jsonData[random].bookingid\r",
							"  };\r",
							"  pm.expect(jsonData).to.deep.include(expectedObject);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking"
					],
					"query": [
						{
							"key": "firstname",
							"value": "",
							"disabled": true
						},
						{
							"key": "lastname",
							"value": "",
							"disabled": true
						},
						{
							"key": "checkin",
							"value": "",
							"disabled": true
						},
						{
							"key": "checkout",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET booking by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is in the expected format\", function () {\r",
							"  pm.expect(jsonData).to.be.an(\"object\").to.have.all.keys(\"firstname\",\"lastname\",\"totalprice\",\"depositpaid\",\"bookingdates\",\"additionalneeds\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/booking/{{bookingid}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{bookingid}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = JSON.parse(responseBody);\r",
							"pm.globals.set(\"bookingIdToUpdate\", jsonData.bookingid);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains expected keys\", function () {\r",
							"  pm.expect(jsonData).to.be.an(\"object\").to.have.keys(\"bookingid\",\"booking\");\r",
							"});\r",
							"\r",
							"pm.test(\"Booking property is not empty\", function() {\r",
							"    pm.expect(jsonData.booking).to.be.an(\"object\").to.have.all.keys(\"firstname\",\"lastname\",\"totalprice\",\"depositpaid\",\"bookingdates\",\"additionalneeds\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"accept": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Ivanna\",\r\n    \"lastname\" : \"Perun\",\r\n    \"totalprice\" : 321,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2023-10-09\",\r\n        \"checkout\" : \"2023-12-31\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/booking",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token={{booker_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Ivanna\",\r\n    \"lastname\" : \"Perun\",\r\n    \"totalprice\" : 321,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2023-10-09\",\r\n        \"checkout\" : \"2023-12-29\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/booking/{{bookingIdToUpdate}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{bookingIdToUpdate}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PartialUpdateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let jsonData = JSON.parse(responseBody);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Booking is updated correctly\", function() {\r",
							"    pm.expect(jsonData.firstname).to.equal(pm.collectionVariables.get(\"firstnameToUpdate\"));\r",
							"    pm.expect(jsonData.lastname).to.equal(pm.collectionVariables.get(\"lastnameToUpdate\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token={{booker_token}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"{{firstnameToUpdate}}\",\r\n    \"lastname\" : \"{{lastnameToUpdate}}\"\r\n}"
				},
				"url": {
					"raw": "{{base_url}}/booking/{{bookingIdToUpdate}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{bookingIdToUpdate}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let resp = pm.response;\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"  pm.response.to.have.status(201);\r",
							"});\r",
							"pm.test(\"Booking was successfully deleted\", function () {\r",
							"  pm.expect(resp.status).to.equal(\"Created\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Cookie",
						"value": "token={{booker_token}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/booking/{{bookingIdToUpdate}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{bookingIdToUpdate}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Health Check",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"API is healthy\", function () {\r",
							"  pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/ping",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"ping"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://restful-booker.herokuapp.com",
			"type": "string"
		},
		{
			"key": "firstnameToUpdate",
			"value": "Ivanka",
			"type": "string"
		},
		{
			"key": "lastnameToUpdate",
			"value": "Lozynska-Perun",
			"type": "string"
		}
	]
}